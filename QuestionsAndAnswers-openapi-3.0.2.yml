#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: QuestionsAndAnswers 5
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    QAQuestionAndAnswerHistoric:
      type: object
      properties:
        row_idx:
          description: History record index
          type: integer
        qaQaaAnswer:
          description: Answer
          type: string
        qaQaaQuestion:
          description: Question
          type: string
        created_dt_hist:
          description: Created date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        row_id:
          description: Unique technical row ID
          type: string
        created_by_hist:
          description: Created by
          type: string
        row_ref_id:
          description: Record row ID
          type: string
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    QASection:
      type: object
      properties:
        qaSecTitle:
          description: Section title
          type: string
        qaSecDescription:
          description: Description
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        qaSecParent:
          description: Parent section
          type: string
        qaSecParent__qaSecNumber:
          description: Section number
          type: string
        qaSecNumber:
          description: Section number
          type: string
    ArrayOfQAQuestionAndAnswerHistoric:
      type: array
      items:
        $ref: '#/components/schemas/QAQuestionAndAnswerHistoric'
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    ArrayOfQASection:
      type: array
      items:
        $ref: '#/components/schemas/QASection'
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    ArrayOfQAQuestionAndAnswer:
      type: array
      items:
        $ref: '#/components/schemas/QAQuestionAndAnswer'
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    QAQuestionAndAnswer:
      type: object
      properties:
        qaQaaURL:
          description: URL
          type: string
        qaQaaSection:
          description: Section
          type: string
        qaQaaDate:
          description: Date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        qaQaaAnswer:
          description: Answer
          type: string
        qaQaaSection__qaSecNumber:
          description: Section number
          type: string
        qaQaaKeywords:
          description: Keywords
          type: array
          items:
            type: string
            enum:
            - KEYWORD1
            - KEYWORD2
            - KEYWORD3
        qaQaaQuestion:
          description: Question
          type: string
        qaQaaDocument:
          description: Document
          type: object
        row_id:
          description: Unique technical row ID
          type: string
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
openapi: 3.0.2
paths:
  /rest/QAQuestionAndAnswerHistoric:
    get:
      summary: Search QAQuestionAndAnswerHistoric business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-qaquestionandanswerhistoric-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfQAQuestionAndAnswerHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: row_ref_id
        description: Search filter for Record row ID
        required: false
      - schema:
          type: integer
        in: query
        name: row_idx
        description: Search filter for History record index
        required: false
      - schema:
          type: string
        in: query
        name: created_by_hist
        description: Search filter for Created by
        required: false
      - schema:
          type: string
        in: query
        name: created_dt_hist
        description: Search filter for Created date
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaQuestion
        description: Search filter for Question
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaAnswer
        description: Search filter for Answer
        required: false
      tags:
      - QAQuestionAndAnswerHistoric
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/QAQuestionAndAnswerHistoric/{row_id}:
    post:
      summary: Create a new QAQuestionAndAnswerHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QAQuestionAndAnswerHistoric'
      operationId: obj-qaquestionandanswerhistoric-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAQuestionAndAnswerHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QAQuestionAndAnswerHistoric
    get:
      summary: Get a QAQuestionAndAnswerHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-qaquestionandanswerhistoric-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAQuestionAndAnswerHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - QAQuestionAndAnswerHistoric
    delete:
      summary: Delete a QAQuestionAndAnswerHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-qaquestionandanswerhistoric-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QAQuestionAndAnswerHistoric
    put:
      summary: Update a QAQuestionAndAnswerHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QAQuestionAndAnswerHistoric'
      operationId: obj-qaquestionandanswerhistoric-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAQuestionAndAnswerHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QAQuestionAndAnswerHistoric
  /rest/QASection/{row_id}:
    post:
      summary: Create a new QASectionbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QASection'
      operationId: obj-qasection-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QASection'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QASection
    get:
      summary: Get a QASection business object record
      security:
      - bearerAuth: []
      operationId: obj-qasection-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QASection'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - QASection
    delete:
      summary: Delete a QASection business object record
      security:
      - bearerAuth: []
      operationId: obj-qasection-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QASection
    put:
      summary: Update a QASectionbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QASection'
      operationId: obj-qasection-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QASection'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QASection
  /rest/QAQuestionAndAnswer/{row_id}:
    post:
      summary: Create a new QAQuestionAndAnswerbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QAQuestionAndAnswer'
      operationId: obj-qaquestionandanswer-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAQuestionAndAnswer'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QAQuestionAndAnswer
    get:
      summary: Get a QAQuestionAndAnswer business object record
      security:
      - bearerAuth: []
      operationId: obj-qaquestionandanswer-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAQuestionAndAnswer'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - QAQuestionAndAnswer
    delete:
      summary: Delete a QAQuestionAndAnswer business object record
      security:
      - bearerAuth: []
      operationId: obj-qaquestionandanswer-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QAQuestionAndAnswer
    put:
      summary: Update a QAQuestionAndAnswerbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QAQuestionAndAnswer'
      operationId: obj-qaquestionandanswer-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAQuestionAndAnswer'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QAQuestionAndAnswer
  /rest/QASection:
    get:
      summary: Search QASection business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-qasection-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfQASection'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: qaSecNumber
        description: Search filter for Section number
        required: false
      - schema:
          type: string
        in: query
        name: qaSecParent
        description: Search filter for Parent section
        required: false
      - schema:
          type: string
        in: query
        name: qaSecParent__qaSecNumber
        description: Search filter for Section number
        required: false
      - schema:
          type: string
        in: query
        name: qaSecTitle
        description: Search filter for Section title
        required: false
      - schema:
          type: string
        in: query
        name: qaSecDescription
        description: Search filter for Description
        required: false
      tags:
      - QASection
  /rest/QAQuestionAndAnswer/{row_id}/publication:QAQuestionAndAnswer-XML:
    get:
      summary: Call a custom publication for a QAQuestionAndAnswer business object
        record or for all records
      security:
      - bearerAuth: []
      operationId: obj-qaquestionandanswer-publication-qaquestionandanswer-xml
      responses:
        '200':
          description: Success in calling the custom publication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - QAQuestionAndAnswer
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
  /rest/QAQuestionAndAnswer:
    get:
      summary: Search QAQuestionAndAnswer business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-qaquestionandanswer-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfQAQuestionAndAnswer'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: _indexsearch
        description: Index search query
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaSection
        description: Search filter for Section
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaSection__qaSecNumber
        description: Search filter for Section number
        required: false
      - schema:
          type: string
          enum:
          - KEYWORD1
          - KEYWORD2
          - KEYWORD3
        in: query
        name: qaQaaKeywords
        description: Search filter for Keywords
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaDate
        description: Search filter for Date
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaQuestion
        description: Search filter for Question
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaAnswer
        description: Search filter for Answer
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaDocument
        description: Search filter for Document
        required: false
      - schema:
          type: string
        in: query
        name: qaQaaURL
        description: Search filter for URL
        required: false
      tags:
      - QAQuestionAndAnswer
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module QuestionsAndAnswers
  title: QuestionsAndAnswers
  version: '5'
tags:
- name: QAQuestionAndAnswer
  description: Question and answer
- name: QAQuestionAndAnswerHistoric
  description: Historic
- name: QASection
  description: Section
